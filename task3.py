"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список. Класс-исключение
 должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При
этом работа скрипта не должна завершаться.
"""


class MyCustomErr(Exception):
    def __init__(self, txt):
        self.txt = txt


res = list()
while True:
    try:
        el = input('Введите число или stop: ')
        if el == 'stop':
            break
        try:
            if el.find('.') == -1:
                res.append(int(el))
            else:
                res.append(float(el))
        except ValueError:
            raise MyCustomErr('допустимы только числа')
    except MyCustomErr as err:
        print(err)
print(res)
